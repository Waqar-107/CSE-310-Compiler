Line no. 1: TOKEN <INT> Lexeme int found
Line no. 1: TOKEN <LPAREN> Lexeme ( found
Line no. 1: TOKEN <RPAREN> Lexeme ) found
Line no. 1: TOKEN <LCURL> Lexeme { found
Line no. 2: TOKEN <SINGLE_LINE_COMMENT> Lexeme ' //this is a single line comment ' found
Line no. 3: TOKEN <INT> Lexeme int found
Line no. 3: TOKEN <COMMA> Lexeme , found
Line no. 3: TOKEN <SEMICOLON> Lexeme ; found
Line no. 4: TOKEN <CHAR> Lexeme char found
Line no. 4: TOKEN <SEMICOLON> Lexeme ; found
Line no. 5: TOKEN <CHAR> Lexeme char found
Line no. 5: TOKEN <LTHIRD> Lexeme [ found
Line no. 5: TOKEN <RTHIRD> Lexeme ] found
Line no. 5: TOKEN <ASSIGNOP> Lexeme = found
Line no. 5: TOKEN <SEMICOLON> Lexeme ; found
Line no. 6: TOKEN <CHAR> Lexeme char found
Line no. 6: TOKEN <LTHIRD> Lexeme [ found
Line no. 6: TOKEN <RTHIRD> Lexeme ] found
Line no. 6: TOKEN <ASSIGNOP> Lexeme = found
Line no. 8: TOKEN <SEMICOLON> Lexeme ; found
Line no. 9: TOKEN <ASSIGNOP> Lexeme = found
Line no. 9: TOKEN <SEMICOLON> Lexeme ; found
Line no. 10: TOKEN <ASSIGNOP> Lexeme = found
Line no. 10: TOKEN <MULOP> Lexeme * found
Line no. 10: TOKEN <MULOP> Lexeme % found
Line no. 10: TOKEN <ADDOP> Lexeme + found
Line no. 10: TOKEN <SEMICOLON> Lexeme ; found
Line no. 11: TOKEN <SINGLE_LINE_COMMENT> Lexeme ' //single line comment ' found
Line no. 12: TOKEN <MULOP> Lexeme / found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 12: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 13: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme * found
Line no. 14: TOKEN <MULOP> Lexeme / found
Line no. 15: TOKEN <IF> Lexeme if found
Line no. 15: TOKEN <LPAREN> Lexeme ( found
Line no. 15: TOKEN <ASSIGNOP> Lexeme = found
Line no. 15: TOKEN <ASSIGNOP> Lexeme = found
Line no. 15: TOKEN <RPAREN> Lexeme ) found
Line no. 15: TOKEN <LCURL> Lexeme { found
Line no. 16: TOKEN <ASSIGNOP> Lexeme = found
Line no. 16: TOKEN <SEMICOLON> Lexeme ; found
Line no. 17: TOKEN <LTHIRD> Lexeme [ found
Line no. 17: TOKEN <RTHIRD> Lexeme ] found
Line no. 17: TOKEN <ASSIGNOP> Lexeme = found
Line no. 17: TOKEN <SEMICOLON> Lexeme ; found
Line no. 18: TOKEN <LTHIRD> Lexeme [ found
Line no. 18: TOKEN <RTHIRD> Lexeme ] found
Line no. 18: TOKEN <ASSIGNOP> Lexeme = found
Line no. 18: TOKEN <SEMICOLON> Lexeme ; found
Line no. 19: TOKEN <RCURL> Lexeme } found
Line no. 20: TOKEN <RETURN> Lexeme return found
Line no. 20: TOKEN <SEMICOLON> Lexeme ; found
Line no. 21: TOKEN <RCURL> Lexeme } found
