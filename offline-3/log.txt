line no. 1: type_specifier : INT 
int

line no. 1: declaration_list : ID
x

ScopeTable with ID 1 Created

line no. 1: declaration_list : declaration_list COMMA ID
x,y

line no. 1: declaration_list : declaration_list COMMA ID
x,y,z

line no. 1: var_declaration : type_specifier declaration_list SEMICOLON
int x,y,z;

line no. 1: unit : var_declation
int x,y,z;

line no. 1: program : unit
int x,y,z;

line no. 1: type_specifier : FLOAT
float

line no. 1: declaration_list : ID
a

line no. 1: var_declaration : type_specifier declaration_list SEMICOLON
float a;

line no. 1: unit : var_declation
float a;

line no. 1: program : program unit
int x,y,z;
float a;

line no. 3: type_specifier : VOID
void

line no. 3: func_declaration : type_specifier ID LPAREN RPAREN SEMICOLON
void foo();

line no. 3: unit : func_declation
void foo();

line no. 3: program : program unit
int x,y,z;
float a;
void foo();

line no. 5: type_specifier : INT 
int

line no. 5: type_specifier : INT 
int

line no. 5: parameter_list : type_specifier ID
int a

line no. 5: type_specifier : INT 
int

line no. 5: parameter_list : parameter_list COMMA type_specifier ID
int a,int b

ScopeTable with ID 2 Created

line no. 6: type_specifier : INT 
int

line no. 6: declaration_list : ID
x

line no. 6: var_declaration : type_specifier declaration_list SEMICOLON
int x;

line no. 6: statement : var_declaration
int x;

line no. 6: statements : statement
int x;

line no. 7: variable : ID
a

line no. 7: factor : variable
a

line no. 7: unary_expression factor
a

line no. 7: term : unary_expression
a

line no. 7: simple_expression : term
a

line no. 7: variable : ID
b

line no. 7: factor : variable
b

line no. 7: unary_expression factor
b

line no. 7: term : unary_expression
b

line no. 7: simple_expression : simple_expression ADDOP term
a+b

line no. 7: rel_expression : simple_expression
a+b

line no. 7: logic_expression : rel_expression
a+b

line no. 7: expression : logic_expression
a+b

line no. 7: statement : RETURN expression SEMICOLON
return a+b;

line no. 7: statements : statements statement
int x;
return a+b;

line no. 8: compound_statement : LCURL statements RCURL
{
int x;
return a+b;
}

------------------------------------------------------------
	------------------------------
	ScopeTable #2
	11  --> <a, ID> 
	12  --> <x, ID> <b, ID> 
	------------------------------
	------------------------------
	ScopeTable #1
	7  --> <foo, function> 
	11  --> <a, ID> 
	12  --> <x, ID> 
	13  --> <y, ID> 
	14  --> <z, ID> 
	------------------------------
------------------------------------------------------------
ScopeTable with ID 2 Removed

line no. 8: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
int var(int aint b){int x;
return a+b;
}


line no. 8: unit : func_declation
line no. 8: program : program unit
int x,y,z;
float a;
void foo();
int var(int aint b){int x;
return a+b;
}


line no. 10: type_specifier : VOID
void

ScopeTable with ID 3 Created

line no. 11: variable : ID
x

line no. 11: factor : CONST_INT
2

line no. 11: unary_expression factor
2

line no. 11: term : unary_expression
2

line no. 11: simple_expression : term
2

line no. 11: rel_expression : simple_expression
2

line no. 11: logic_expression : rel_expression
2

line no. 11: expression : variable ASSIGNOP logic_expression
x=2

line no. 11: expression_statement : expression SEMICOLON
x=2;

line no. 11: statement : expression_statement
x=2;

line no. 11: statements : statement
x=2;

line no. 12: variable : ID
y

line no. 12: variable : ID
x

line no. 12: factor : variable
x

line no. 12: unary_expression factor
x

line no. 12: term : unary_expression
x

line no. 12: simple_expression : term
x

line no. 12: factor : CONST_INT
5

line no. 12: unary_expression factor
5

line no. 12: term : unary_expression
5

line no. 12: simple_expression : simple_expression ADDOP term
x-5

line no. 12: rel_expression : simple_expression
x-5

line no. 12: logic_expression : rel_expression
x-5

line no. 12: expression : variable ASSIGNOP logic_expression
y=x-5

line no. 12: expression_statement : expression SEMICOLON
y=x-5;

line no. 12: statement : expression_statement
y=x-5;

line no. 12: statements : statements statement
x=2;
y=x-5;

line no. 13: compound_statement : LCURL statements RCURL
{
x=2;
y=x-5;
}

------------------------------------------------------------
	------------------------------
	ScopeTable #3
	------------------------------
	------------------------------
	ScopeTable #1
	7  --> <foo, function> 
	11  --> <a, ID> 
	12  --> <x, ID> 
	13  --> <y, ID> 
	14  --> <z, ID> 
	------------------------------
------------------------------------------------------------
ScopeTable with ID 3 Removed

line no. 13: func_definition : type_specifier ID LPAREN RPAREN compound_statement
foo(){x=2;
y=x-5;
}


line no. 13: unit : func_declation
line no. 13: program : program unit
int x,y,z;
float a;
void foo();
int var(int aint b){int x;
return a+b;
}

foo(){x=2;
y=x-5;
}


line no. 15: type_specifier : INT 
int

ScopeTable with ID 4 Created

line no. 16: type_specifier : INT 
int

line no. 16: declaration_list : ID LTHIRD CONST_INT RTHIRD
a[2]

line no. 16: declaration_list : declaration_list COMMA ID
a[2],c

line no. 16: declaration_list : declaration_list COMMA ID
a[2],c,i

line no. 16: declaration_list : declaration_list COMMA ID
a[2],c,i,j

line no. 16: var_declaration : type_specifier declaration_list SEMICOLON
int a[2],c,i,j;

line no. 16: statement : var_declaration
int a[2],c,i,j;

line no. 16: statements : statement
int a[2],c,i,j;

line no. 16: type_specifier : FLOAT
float

line no. 16: declaration_list : ID
d

line no. 16: var_declaration : type_specifier declaration_list SEMICOLON
float d;

line no. 16: statement : var_declaration
float d;

line no. 16: statements : statements statement
int a[2],c,i,j;
float d;

line no. 18: compound_statement : LCURL statements RCURL
{
int a[2],c,i,j;
float d;
}

------------------------------------------------------------
	------------------------------
	ScopeTable #4
	11  --> <a, ID> 
	13  --> <c, ID> 
	14  --> <d, ID> 
	19  --> <i, ID> 
	20  --> <j, ID> 
	------------------------------
	------------------------------
	ScopeTable #1
	7  --> <foo, function> 
	11  --> <a, ID> 
	12  --> <x, ID> 
	13  --> <y, ID> 
	14  --> <z, ID> 
	------------------------------
------------------------------------------------------------
ScopeTable with ID 4 Removed

line no. 18: func_definition : type_specifier ID LPAREN RPAREN compound_statement
main(){int a[2],c,i,j;
float d;
}


line no. 18: unit : func_declation
line no. 18: program : program unit
int x,y,z;
float a;
void foo();
int var(int aint b){int x;
return a+b;
}

foo(){x=2;
y=x-5;
}

main(){int a[2],c,i,j;
float d;
}


line no. 19: start : program
int x,y,z;
float a;
void foo();
int var(int aint b){int x;
return a+b;
}

foo(){x=2;
y=x-5;
}

main(){int a[2],c,i,j;
float d;
}


------------------------------------------------------------
	------------------------------
	ScopeTable #1
	7  --> <foo, function> 
	11  --> <a, ID> 
	12  --> <x, ID> 
	13  --> <y, ID> 
	14  --> <z, ID> 
	------------------------------
------------------------------------------------------------
total lines read: 18
total errors encountered: 1