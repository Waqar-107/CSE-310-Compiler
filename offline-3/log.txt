line no. 1: type_specifier : INT 
int

line no. 1: type_specifier : INT 
int

line no. 1: parameter_list : type_specifier ID
int a

################################
# ScopeTable with ID 2 Created #
################################

line no. 2: variable : ID
a

line no. 2: factor : variable
a

line no. 2: unary_expression : factor
a

line no. 2: term : unary_expression
a

line no. 2: simple_expression : term
a

line no. 2: rel_expression : simple_expression
a

line no. 2: logic_expression : rel_expression
a

line no. 2: expression : logic_expression
a

line no. 2: statement : RETURN expression SEMICOLON
return a;

line no. 2: statements : statement
return a;

line no. 3: compound_statement : LCURL statements RCURL
{
return a;
}

line no. 3: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
int func(int a){return a;
}


	------------------------------
	ScopeTable #2
	1  --> <a, ID> 
	------------------------------
------------------------------------------------------------
	------------------------------
	ScopeTable #1
	5  --> <func, ID> 
	------------------------------
------------------------------------------------------------
################################
# ScopeTable with ID 2 Removed #
################################

line no. 3: unit : func_declaration
int func(int a){return a;
}


line no. 3: program : unit
int func(int a){return a;
}


line no. 5: type_specifier : FLOAT
float

################################
# ScopeTable with ID 3 Created #
################################

line no. 6: factor : CONST_FLOAT
1.0

line no. 6: unary_expression : factor
1.0

line no. 6: term : unary_expression
1.0

line no. 6: simple_expression : term
1.0

line no. 6: rel_expression : simple_expression
1.0

line no. 6: logic_expression : rel_expression
1.0

line no. 6: expression : logic_expression
1.0

line no. 6: statement : RETURN expression SEMICOLON
return 1.0;

line no. 6: statements : statement
return 1.0;

line no. 7: compound_statement : LCURL statements RCURL
{
return 1.0;
}

line no. 7: func_definition : type_specifier ID LPAREN RPAREN compound_statement
float f(){return 1.0;
}


	------------------------------
	ScopeTable #3
	------------------------------
------------------------------------------------------------
	------------------------------
	ScopeTable #1
	5  --> <func, ID> 
	6  --> <f, ID> 
	------------------------------
------------------------------------------------------------
################################
# ScopeTable with ID 3 Removed #
################################

line no. 7: unit : func_declaration
float f(){return 1.0;
}


line no. 7: program : program unit
int func(int a){return a;
}

float f(){return 1.0;
}


line no. 9: type_specifier : VOID
void

################################
# ScopeTable with ID 4 Created #
################################

line no. 10: factor : CONST_INT
0

line no. 10: unary_expression : factor
0

line no. 10: term : unary_expression
0

line no. 10: simple_expression : term
0

line no. 10: rel_expression : simple_expression
0

line no. 10: logic_expression : rel_expression
0

line no. 10: expression : logic_expression
0

line no. 10: statement : RETURN expression SEMICOLON
return 0;

line no. 10: statements : statement
return 0;

line no. 11: compound_statement : LCURL statements RCURL
{
return 0;
}

line no. 11: func_definition : type_specifier ID LPAREN RPAREN compound_statement
void g(){return 0;
}


	------------------------------
	ScopeTable #4
	------------------------------
------------------------------------------------------------
	------------------------------
	ScopeTable #1
	5  --> <func, ID> 
	6  --> <f, ID> 
	7  --> <g, ID> 
	------------------------------
------------------------------------------------------------
################################
# ScopeTable with ID 4 Removed #
################################

line no. 11: unit : func_declaration
void g(){return 0;
}


line no. 11: program : program unit
int func(int a){return a;
}

float f(){return 1.0;
}

void g(){return 0;
}


line no. 13: type_specifier : INT 
int

line no. 13: type_specifier : INT 
int

line no. 13: parameter_list : type_specifier ID
int a

line no. 13: func_declaration : type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
int h(int a);

line no. 13: unit : func_declaration
int h(int a);

line no. 13: program : program unit
int func(int a){return a;
}

float f(){return 1.0;
}

void g(){return 0;
}

int h(int a);

line no. 15: type_specifier : INT 
int

################################
# ScopeTable with ID 5 Created #
################################

line no. 16: type_specifier : INT 
int

line no. 16: declaration_list : ID LTHIRD CONST_INT RTHIRD
a[2]

line no. 16: declaration_list : declaration_list COMMA ID
a[2],c

line no. 16: declaration_list : declaration_list COMMA ID
a[2],c,i

line no. 16: declaration_list : declaration_list COMMA ID
a[2],c,i,j

line no. 16: var_declaration : type_specifier declaration_list SEMICOLON
int a[2],c,i,j;

line no. 16: statement : var_declaration
int a[2],c,i,j;

line no. 16: statements : statement
int a[2],c,i,j;

line no. 17: type_specifier : FLOAT
float

line no. 17: declaration_list : ID
c

line no. 17: var_declaration : type_specifier declaration_list SEMICOLON
float c;

line no. 17: statement : var_declaration
float c;

line no. 17: statements : statements statement
int a[2],c,i,j;
float c;

line no. 18: variable : ID
i

line no. 18: factor : CONST_FLOAT
2.3

line no. 18: unary_expression : factor
2.3

line no. 18: term : unary_expression
2.3

line no. 18: simple_expression : term
2.3

line no. 18: rel_expression : simple_expression
2.3

line no. 18: logic_expression : rel_expression
2.3

line no. 18: expression : variable ASSIGNOP logic_expression
i=2.3

line no. 18: expression_statement : expression SEMICOLON
i=2.3;

line no. 18: statement : expression_statement
i=2.3;

line no. 18: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;

line no. 19: factor : CONST_FLOAT
2.5

line no. 19: unary_expression : factor
2.5

line no. 19: term : unary_expression
2.5

line no. 19: simple_expression : term
2.5

line no. 19: rel_expression : simple_expression
2.5

line no. 19: logic_expression : rel_expression
2.5

line no. 19: expression : logic_expression
2.5

line no. 19: variable : ID LTHIRD expression RTHIRD
a[2.5]

line no. 19: factor : CONST_INT
1

line no. 19: unary_expression : factor
1

line no. 19: term : unary_expression
1

line no. 19: simple_expression : term
1

line no. 19: rel_expression : simple_expression
1

line no. 19: logic_expression : rel_expression
1

line no. 19: expression : variable ASSIGNOP logic_expression
a=1

line no. 19: expression_statement : expression SEMICOLON
a[2]=1;

line no. 19: statement : expression_statement
a[2]=1;

line no. 19: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;

line no. 20: variable : ID
j

line no. 20: factor : CONST_INT
2

line no. 20: unary_expression : factor
2

line no. 20: term : unary_expression
2

line no. 20: factor : CONST_FLOAT
3.7

line no. 20: unary_expression : factor
3.7

line no. 20: term : term MULOP unary_expression
2%3.7

line no. 20: simple_expression : term
2%3.7

line no. 20: rel_expression : simple_expression
2%3.7

line no. 20: logic_expression : rel_expression
2%3.7

line no. 20: expression : variable ASSIGNOP logic_expression
j=2%3.7

line no. 20: expression_statement : expression SEMICOLON
j=2%3.7;

line no. 20: statement : expression_statement
j=2%3.7;

line no. 20: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;

line no. 21: variable : ID
j

line no. 21: factor : CONST_INT
2

line no. 21: unary_expression : factor
2

line no. 21: term : unary_expression
2

line no. 21: factor : ID LPAREN argument_list RPAREN
f()

line no. 21: unary_expression : factor
f()

line no. 21: term : term MULOP unary_expression
2%f()

line no. 21: simple_expression : term
2%f()

line no. 21: rel_expression : simple_expression
2%f()

line no. 21: logic_expression : rel_expression
2%f()

line no. 21: expression : variable ASSIGNOP logic_expression
j=2%f()

line no. 21: expression_statement : expression SEMICOLON
j=2%f();

line no. 21: statement : expression_statement
j=2%f();

line no. 21: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();

line no. 22: variable : ID
a

line no. 22: factor : variable
a

line no. 22: unary_expression : factor
a

line no. 22: term : unary_expression
a

line no. 22: simple_expression : term
a

line no. 22: rel_expression : simple_expression
a

line no. 22: logic_expression : rel_expression
a

line no. 22: arguments : logic_expression
a

line no. 22: argument_list : arguments
a

line no. 22: factor : ID LPAREN argument_list RPAREN
func(a)

line no. 22: unary_expression : factor
func(a)

line no. 22: term : unary_expression
func(a)

line no. 22: simple_expression : term
func(a)

line no. 22: rel_expression : simple_expression
func(a)

line no. 22: logic_expression : rel_expression
func(a)

line no. 22: expression : logic_expression
func(a)

line no. 22: expression_statement : expression SEMICOLON
func(a);

line no. 22: statement : expression_statement
func(a);

line no. 22: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);

line no. 23: variable : ID
j

line no. 23: factor : ID LPAREN argument_list RPAREN
g()

line no. 23: unary_expression : factor
g()

line no. 23: term : unary_expression
g()

line no. 23: simple_expression : term
g()

line no. 23: rel_expression : simple_expression
g()

line no. 23: logic_expression : rel_expression
g()

line no. 23: expression : variable ASSIGNOP logic_expression
j=g()

line no. 23: expression_statement : expression SEMICOLON
j=g();

line no. 23: statement : expression_statement
j=g();

line no. 23: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();

line no. 24: variable : ID
j

line no. 24: factor : CONST_INT
2

line no. 24: unary_expression : factor
2

line no. 24: term : unary_expression
2

line no. 24: factor : CONST_FLOAT
3.5

line no. 24: unary_expression : factor
3.5

line no. 24: term : unary_expression
3.5

line no. 24: simple_expression : term
3.5

line no. 24: factor : CONST_INT
4

line no. 24: unary_expression : factor
4

line no. 24: term : unary_expression
4

line no. 24: simple_expression : term
4

line no. 24: rel_expression : simple_expression RELOP simple_expression
3.5<4

line no. 24: logic_expression : rel_expression
3.5<4

line no. 24: expression : logic_expression
3.5<4

line no. 24: factor : LPAREN expression RPAREN
(3.5<4)

line no. 24: unary_expression : factor
(3.5<4)

line no. 24: term : term MULOP unary_expression
2%(3.5<4)

line no. 24: simple_expression : term
2%(3.5<4)

line no. 24: rel_expression : simple_expression
2%(3.5<4)

line no. 24: logic_expression : rel_expression
2%(3.5<4)

line no. 24: expression : variable ASSIGNOP logic_expression
j=2%(3.5<4)

line no. 24: expression_statement : expression SEMICOLON
j=2%(3.5<4);

line no. 24: statement : expression_statement
j=2%(3.5<4);

line no. 24: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);

line no. 25: variable : ID
b

line no. 25: factor : CONST_INT
8

line no. 25: unary_expression : factor
8

line no. 25: term : unary_expression
8

line no. 25: simple_expression : term
8

line no. 25: rel_expression : simple_expression
8

line no. 25: logic_expression : rel_expression
8

line no. 25: expression : variable ASSIGNOP logic_expression
b=8

line no. 25: expression_statement : expression SEMICOLON
b=8;

line no. 25: statement : expression_statement
b=8;

line no. 25: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;

line no. 26: variable : ID
a

line no. 26: factor : CONST_INT
4

line no. 26: unary_expression : factor
4

line no. 26: term : unary_expression
4

line no. 26: simple_expression : term
4

line no. 26: rel_expression : simple_expression
4

line no. 26: logic_expression : rel_expression
4

line no. 26: expression : variable ASSIGNOP logic_expression
a=4

line no. 26: expression_statement : expression SEMICOLON
a=4;

line no. 26: statement : expression_statement
a=4;

line no. 26: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;

line no. 27: factor : CONST_INT
3

line no. 27: unary_expression : factor
3

line no. 27: term : unary_expression
3

line no. 27: simple_expression : term
3

line no. 27: rel_expression : simple_expression
3

line no. 27: logic_expression : rel_expression
3

line no. 27: expression : logic_expression
3

line no. 27: variable : ID LTHIRD expression RTHIRD
i[3]

line no. 27: factor : CONST_INT
1

line no. 27: unary_expression : factor
1

line no. 27: term : unary_expression
1

line no. 27: simple_expression : term
1

line no. 27: rel_expression : simple_expression
1

line no. 27: logic_expression : rel_expression
1

line no. 27: expression : variable ASSIGNOP logic_expression
i=1

line no. 27: expression_statement : expression SEMICOLON
i[3]=1;

line no. 27: statement : expression_statement
i[3]=1;

line no. 27: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;

line no. 28: factor : ID LPAREN argument_list RPAREN
func()

line no. 28: unary_expression : factor
func()

line no. 28: term : unary_expression
func()

line no. 28: simple_expression : term
func()

line no. 28: rel_expression : simple_expression
func()

line no. 28: logic_expression : rel_expression
func()

line no. 28: expression : logic_expression
func()

line no. 28: expression_statement : expression SEMICOLON
func();

line no. 28: statement : expression_statement
func();

line no. 28: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();

line no. 29: factor : ID LPAREN argument_list RPAREN
i()

line no. 29: unary_expression : factor
i()

line no. 29: term : unary_expression
i()

line no. 29: simple_expression : term
i()

line no. 29: rel_expression : simple_expression
i()

line no. 29: logic_expression : rel_expression
i()

line no. 29: expression : logic_expression
i()

line no. 29: expression_statement : expression SEMICOLON
i();

line no. 29: statement : expression_statement
i();

line no. 29: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();

line no. 30: factor : CONST_INT
0

line no. 30: unary_expression : factor
0

line no. 30: term : unary_expression
0

line no. 30: simple_expression : term
0

line no. 30: rel_expression : simple_expression
0

line no. 30: logic_expression : rel_expression
0

line no. 30: expression : logic_expression
0

line no. 30: statement : RETURN expression SEMICOLON
return 0;

line no. 30: statements : statements statement
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;

line no. 31: compound_statement : LCURL statements RCURL
{
int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;
}

line no. 31: func_definition : type_specifier ID LPAREN RPAREN compound_statement
int main(){int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;
}


	------------------------------
	ScopeTable #5
	0  --> <j, ID> 
	1  --> <a, ID> 
	3  --> <c, ID> 
	9  --> <i, ID> 
	------------------------------
------------------------------------------------------------
	------------------------------
	ScopeTable #1
	4  --> <main, ID> 
	5  --> <func, ID> 
	6  --> <f, ID> 
	7  --> <g, ID> 
	8  --> <h, ID> 
	------------------------------
------------------------------------------------------------
################################
# ScopeTable with ID 5 Removed #
################################

line no. 31: unit : func_declaration
int main(){int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;
}


line no. 31: program : program unit
int func(int a){return a;
}

float f(){return 1.0;
}

void g(){return 0;
}

int h(int a);
int main(){int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;
}


line no. 33: type_specifier : INT 
int

line no. 33: type_specifier : FLOAT
float

line no. 33: parameter_list : type_specifier ID
float a

################################
# ScopeTable with ID 6 Created #
################################

line no. 34: factor : CONST_INT
0

line no. 34: unary_expression : factor
0

line no. 34: term : unary_expression
0

line no. 34: simple_expression : term
0

line no. 34: rel_expression : simple_expression
0

line no. 34: logic_expression : rel_expression
0

line no. 34: expression : logic_expression
0

line no. 34: statement : RETURN expression SEMICOLON
return 0;

line no. 34: statements : statement
return 0;

line no. 35: compound_statement : LCURL statements RCURL
{
return 0;
}

line no. 35: func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
int h(float a){return 0;
}


	------------------------------
	ScopeTable #6
	1  --> <a, ID> 
	------------------------------
------------------------------------------------------------
	------------------------------
	ScopeTable #1
	4  --> <main, ID> 
	5  --> <func, ID> 
	6  --> <f, ID> 
	7  --> <g, ID> 
	8  --> <h, ID> 
	------------------------------
------------------------------------------------------------
################################
# ScopeTable with ID 6 Removed #
################################

line no. 35: unit : func_declaration
int h(float a){return 0;
}


line no. 35: program : program unit
int func(int a){return a;
}

float f(){return 1.0;
}

void g(){return 0;
}

int h(int a);
int main(){int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;
}

int h(float a){return 0;
}


line no. 36: start : program
int func(int a){return a;
}

float f(){return 1.0;
}

void g(){return 0;
}

int h(int a);
int main(){int a[2],c,i,j;
float c;
i=2.3;
a[2]=1;
j=2%3.7;
j=2%f();
func(a);
j=g();
j=2%(3.5<4);
b=8;
a=4;
i[3]=1;
func();
i();
return 0;
}

int h(float a){return 0;
}


------------------------------------------------------------
	------------------------------
	ScopeTable #1
	4  --> <main, ID> 
	5  --> <func, ID> 
	6  --> <f, ID> 
	7  --> <g, ID> 
	8  --> <h, ID> 
	------------------------------
------------------------------------------------------------
total lines read: 35
total errors encountered: 16