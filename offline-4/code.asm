.MODEL SMALL
STACK 100H
.DATA
	a2 DW ?
	b2 DW ?
	c2 3 DUP(?)
.CODE
PRINT_ID PROC

	;SAVE IN STACK
	PUSH AX
	PUSH BX
	PUSH CX
	PUSH DX

	;CHECK IF NEGATIVE
	OR AX, AX
	JGE PRINT_NUMBER

	;PRINT MINUS SIGN
	PUSH AX
	MOV AH, 2
	MOV DL, '-'
	INT 21H
	POP AX

	NEG AX

	PRINT_NUMBER:
	XOR CX, CX
	MOV BX, 10D

	REPEAT:

		;AX:DX- QUOTIENT:REMAINDER
		XOR DX, DX
		DIV BX  ;DIVIDE BY 10
		PUSH DX ;PUSH THE REMAINDER IN STACK

		INC CX

		OR AX, AX
		JNE REPEAT

	MOV AH, 2

	PRINT_LOOP:
		POP DX
		ADD DL, 30H
		INT 21H
		LOOP PRINT_LOOP
	POP AX
	POP BX
	POP CX
	POP DX

	RET
PRINT_ID ENDP

main PROC

	;INITIALIZE DATA SEGMENT
	MOV AX, @DATA
	MOV DS, AX

	MOV AX, 1*2+3%3
	MOV a, AX
	MOV AX, 1<5
	MOV b, AX
	MOV AX, 2
	MOV c, AX
	MOV AX, a&&b
	CMP AX, 0
	JE L1
	MOV AX, c
	ADD AX, 1
	MOV c, AX
	JMP L2
	L1:
	MOV AX, c
	MOV c, AX

	L2:
	MOV AX, a
	CALL PRINT_ID
	MOV AX, b
	CALL PRINT_ID
	MOV AX, 4CH
INT 21H
main ENDP

